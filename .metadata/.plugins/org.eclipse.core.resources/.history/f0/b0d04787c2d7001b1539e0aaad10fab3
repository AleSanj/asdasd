/*
 * conexion.h
 *
 *  Created on: 6 may. 2021
 *      Author: utnso
 */

#ifndef SRC_CONEXION_H_
#define SRC_CONEXION_H_

typedef enum {
	TRIPULANTE,
	PATOTA,			//Cuando se manda el tipo de mensaje patota ?
	INICIAR_PATOTA, //Es lo mismo que iniciar_paota?
	PEDIRTAREA,		//pedir y enviar tarea se podria hacer en un solo mensaje, una vez hecha la conexion se puede hacer
	ENVIOTAREA,		//send y recv las veces que quieran
	ACTUALIZAR_POS,
	ELIMINAR_TRIPULANTE,
	ACTUALIZAR_ESTADO,
	SABOTAJE
};


void ejemplo();
t_paquete* crear_paquete(OP_CODE codigo,MQ_CODE emisor);
void crear_buffer(t_paquete* paquete);
void eliminar_paquete(t_paquete* paquete);


/*========================== TODOS =================================*/
t_paquete* crear_paquete(CODE_OP codigo);
t_paquete* recibir_paquete(int socket_cliente, int* respuesta);
int enviar_paquete(t_paquete* paquete, int socket_cliente,t_log* logger);

void liberar_conexion(int);
/*========================== CLIENTE =================================*/
int crear_conexion(char*, char*);


/*========================== SERVIDOR =================================*/
int crear_server(char*,char*);
int esperar_cliente(int,int);




#endif /* SRC_CONEXION_H_ */
